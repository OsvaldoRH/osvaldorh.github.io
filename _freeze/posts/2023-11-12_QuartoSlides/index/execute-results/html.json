{
  "hash": "c5204217175cfb924aa67e14f2cc121b",
  "result": {
    "markdown": "---\ntitle: \"Slides con Quarto\"\ndescription: \"Presentaciones con Quarto, qmd sobre beamer... \"\nauthor:\n  - name: Osvaldo Rodríguez\n    url: https://osvaldorh.github.io/\n    orcid: 0000-0002-6567-4669\n    affiliation: Investigador en el Instituto de Energías Renovables de la UNAM , Grupo de energía Eólica\n    affiliation-url: https://www.ier.unam.mx \ndate: 11-13-2023\ncategories: [quarto, python, slides, template, beamer, revealjs] # self-defined categories\ncitation: \n  url: https://osvaldorh.github.io/posts/2016-11-13_IntroQuarto\nimage: image.png\ndraft: false # setting this to `true` will prevent your post from appearing on your listing page until you're ready!\nlang: es \n---\n\nDe las cosas que me gustan pero que me consumen tiempo es preparar una presentación. Como todos, creo, inicié haciendo presentaciones en powerpoint, Keynote y Beamer ($\\LaTeX$). Este último con los mejores resultados pero con un poco más de trabajo para que las diapositivas hicieran lo que yo quería. \n\nEsto ha cambiado con Quarto, utilizando su opción de slides, que permite hacer diapositivas usando menos código. El formato es ```*.qmd``` *quarto mark down* \"semi-código\", y si extrañas hacer un beamer, de todas formas aquí te platico cómo. \n\nLo primero es definir un preámbulo aquí de dejo uno que hace muchas cosas, dejo las figuras comentadas para que lo personalices.\n\n```{.yaml}\n---\ntitle: Título de la diapositiva\nsubtitle: \"Un subtítulo\"\nformat:\n  beamer\n  revealjs:\n    output-file: slide.html\n    theme: default\n    #smaller: true\n    scrollable: true\n    slide-number: true\n    #show-slide-number: print\n    #navigation-mode: vertical\n    controls-layout: bottom-right \n    controls-tutorial: true\n    chalkboard:\n      theme: whiteboard\n      boardmarker-width: 1\n      buttons: true\nauthor:\n  - name: \"Autor 1\"\n    orcid: 0000-000X-XXXX-XXXX\n    email: autor_1@edu\n    affiliation: \n      - name: Instituto\n        url: my_web_personal\n  - name: \"Autor 2\"\n    orcid: 0000-000X-XXXX-XXXX\n    email: autor_2@edu\n    affiliation: \n      - name: Instituto\n        url: my_web_personal\n#logo: img/logo_color.png\nfooter: \"Congreso de universidades - 2023\"\n---\n\n# Sección 1\n\n## Diapositiva 1\n::::{.columns}\n\n:::{.column width=\"50%\"}\nAquí una columna:\n\n- primero\n- segundo\n- tercero\n:::\n\n:::{.column width=\"50%\"}\n\n![Una imagen](this_is_fine.webp)\n\n:::\n\n::::\n\n\n## Algo de código {.smaller}\n\n\n\nAqui algo de texto, se incluye ```{.smaller}``` al lado del título de la diapositiva para reducir el tamaño del texto.\n\n::: {.cell execution_count=1}\n``` {.python .cell-code}\nimport numpy as np\nimport matplotlib.pyplot as plt \n\nVelocidad=np.arange(0,10,0.1)\nDensidad_Potencia=0.5*1.2*Velocidad**3\n\nplt.plot(Velocidad,Densidad_Potencia,'.')\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](index_files/figure-html/cell-2-output-1.png){width=575 height=411}\n:::\n:::\n\n\n## Animaciones {auto-animate=true}\n\nUna primera frase\n\n## Animaciones {auto-animate=true}\n\nPero antes esto...\n\nUna primera frase\n\n\n::: {style=\"margin-top: 100px;\"}\nPero esto es importante\n:::\n\n## Animaciones {auto-animate=true}\n\nPero antes esto...\n\nUna primera frase\n\n::: {style=\"margin-top: 200px; font-size: 3em; color: red;\"}\nPero esto es importante\n:::\n\n\n\n\n```\n\n\nLa salida de este código será:\n\n\n```{=html}\n<iframe width=\"100%\" height=\"300\" src=\"slides/slides.html\" title=\"Slides\"></iframe>\n```\n\npero hacer diapositivas basta con anteponer un signo de ```#```:\n\n- ```# *Nombre de la sección*``` para crear secciones.\n- ```## *Titulo de la diapositiva*``` para crear diapositivas\n\nPara que tu lectura sea provechosa, te dejo el código de un \"preámbulo\"\n\n\n\n\n\n\n```{=html}\n<iframe width=\"100%\" height=\"300\" src=\"https://quarto.org/\" title=\"Quarto sitio oficial\"></iframe>\n```\n\n\nUna de las ventajas que tiene *quarto* es la creación de textos en \"codigo\" y generar una salida. Esto tradicionalmente lo hacemos en $\\LaTeX$ y obtenemos de salida, un *pdf*, con una calidad listo para imprimir.\n\n\n```{mermaid}\nflowchart LR\n  A(LaTeX) --> B(PDF)\n```\n\n\nCon *quarto* hacemos algo parecido, utilizamos *rmarkdown* para escribir texto y referecias cruzadas; estos textos se pueden enriquecer con $\\LaTeX$ y algún lenguaje de programación, ya que es posible inserta código o bien sus salidas. Además, los archivos de salida no están limitados a *pdf*, sino que puedes obtener un ebook y una página web (html). Cubriendo todos los formatos digitales posibles de salida. incrementando las vías de distribución y canales de comunicación por una cantidad de trabajo única.\n\n\n```{mermaid}\nflowchart LR\n newLines[\"Quarto\n - Rmarkdown\n - Python\n - LaTeX\"]\n    newLines --> B[PDF]\n    newLines --> C[ebook]\n    newLines --> D[html]\n```\n\n\n\nEn este post describo brevemente un template que generé con *Quarto*, al cuál le integré algunos elementos para escribir de inmediato un libro y ayudar a reducir la curva de aprendizaje. Este template lo generé siguiendo la documentación oficial. Aquí describo una guía rápida de cómo usarla.\n\nUn dato importante es que antes de previsualizar `preview` debes tener ya instalado Python y Latex previamente para que al momento de correr quarto todo marche correctamente. También recomiendo descargar e instalar VS-Code, el cuál ofrece una interfaz gráfica para previsualizar el contenido que trabajes. Finalmente, descarga el template en tu computadora. Aquí todos los vínculos. \n\n1. Descarga e instala Quarto <https://quarto.org>\n\n2. Descargar VS-code <https://code.visualstudio.com>\n\n3. Descarga el template <https://github.com/OsvaldoRH/libro_quatro_template>\n\nCon lo anterior ya hecho basta con correr quarto a través de la terminal usando en la ubicación del template el comando `quarto preview` para previsualizar tu texto y si quieres tener todas las salidad debes ejecuta `quarto render`.\n\n::: {.callout-tip}\n## Ojo\n\nDespués del `quarto render` hay que ejecutar `quarto preview` para previsualizar.\n:::\n\nLa previsualización puedes hacerla usando VSCode. En el programa podrás navegar y visualizar los `.qmd` que son los archivos que hay que editar para ajustar el template a tus necesidades. Hice un breve video de referencia que espero sea de utilidad.\n\nAquí el video de cómo hacer un `quarto preview` y un `quarto render`; para tener como salida los archivos *html*, *pdf* y un *ebook*.\n\n{{< video https://youtu.be/lrotSZe568o\n    title=\"Descripción del template Libro_template\"\n    start=\"0\"\n    aspect-ratio=\"21x9\" \n>}}\n\n",
    "supporting": [
      "index_files"
    ],
    "filters": [],
    "includes": {}
  }
}